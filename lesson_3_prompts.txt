When would you want to use a remote repository rather than keeping all your work 
local?
    Yo pienso que cuando estas trabajando en un proyecto grande es mejor tener 
    un remote repository. Una razón es porque puedes perder todo tu trabajo si 
    es que la computadora llega a fallar y la segunda razón es que puedes 
    trabajar de manera colaborativa con otras personas.

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?
    La razón para hacer el pull de manera manual es porque los cambios que 
    alguien más haga pueden hacer que temporalmente tu proyecto sea inservible.
    Por ejemplo, si tú y otro compañer@ están trabajando en el desarrollo de
    una misma feature y el código se sincroniza sin antes revisar los posibles
    conflictos, es posible que el código que antes funcionaba deje de hacerlo.

Describe the differences between forks, clones, and branches. When would you use 
one instead of another?
    Las branches o ramas deben de ser utilizadas cuándo dentro de un mismo 
    proyecto se quieren intentar cambios drásticos o alguna nueva funcionalidad,
    pero sin perder una version del projecto que funcione. Fork se da cunado un
    repositorio se duplica en GitHub a mi propia cuenta. De esta manera tendré 
    todo el poryecto hasta el último commit que se hizo por parte del 
    repositorio original. Clone es cuando quieres tener una copia del repo
    en tu máquina de manera que puedas modificar y más tarde hacer push para 
    actualizar el proyecto con los cambios que se han hecho en el ambiente 
    local.

What is the benefit of having a copy of the last known state of the remote 
stored locally?
    It is useful because the remote repository may change, for instance another
    collaborator could have pushed a new commit, then I will need to know which 
    was the last commit that I fetched from the remote repository. When I make
    a pull I will merge the local master with the origin/master.

How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?
    Para trabajar de manera colaborativa sin estas herramientas tendrías que 
    editar el proyecto una persona a la vez ya que no puedes crear branches ni
    pull requests. Sería más fácil en el sentido de que nunca tendrías que 
    resolver conflictos, como cuando en git haces merge y hay cambios por parte 
    de dos usuarios en el mismo documento. Sin embargo, puedes llegar mucho más
    lejos, más rápido y de manera más fiable con Git y GitHub.

When would you want to make changes in a separate branch rather than directly 
in master? What benefits does each approach have?
    This approach is useful when you are trying something completly new and you 
    don't want to lose a working state of your project, e.g. using a new 
    algorithm that searches for the shortest path while trying to build a robot 
    that walks thorugh a labyrinth. In any moment that you want, if this new
    feature doesn't work you can simply checkout to master and start again 
    trying to build this new feature.